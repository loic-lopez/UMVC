# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow helps you trigger a SonarCloud analysis of your code and populates 
# GitHub Code Scanning alerts with the vulnerabilities found.
# Free for open source project.

# 1. Login to SonarCloud.io using your GitHub account

# 2. Import your project on SonarCloud
#     * Add your GitHub organization first, then add your repository as a new project.
#     * Please note that many languages are eligible for automatic analysis, 
#       which means that the analysis will start automatically without the need to set up GitHub Actions.
#     * This behavior can be changed in Administration > Analysis Method.
# 
# 3. Follow the SonarCloud in-product tutorial
#     * a. Copy/paste the Project Key and the Organization Key into the args parameter below
#          (You'll find this information in SonarCloud. Click on "Information" at the bottom left)
#
#     * b. Generate a new token and add it to your Github repository's secrets using the name SONAR_TOKEN
#          (On SonarCloud, click on your avatar on top-right > My account > Security 
#           or go directly to https://sonarcloud.io/account/security/)

# Feel free to take a look at our documentation (https://docs.sonarcloud.io/getting-started/github/)
# or reach out to our community forum if you need some help (https://community.sonarsource.com/c/help/sc/9)

name: SonarCloud analysis

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  pull-requests: read # allows SonarCloud to decorate PRs with analysis results

jobs:
  Analysis:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      - run: git fetch --prune --unshallow --tags
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
      
      - name: install dotCover
        run: dotnet tool install --global JetBrains.dotCover.GlobalTool
      
      - name: install dotnet-sonarscanner
        run: dotnet tool install --global dotnet-sonarscanner
        
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.15
        with:
          versionSpec: '5.x'

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.15
        
      - name: Install dotnet dependencies for UMVC.Core
        run: dotnet restore
        working-directory: UMVC.Core
      
      - name: Start SonarCloud scanner for UMVC.Core
        run: |
          dotnet sonarscanner begin /k:"UMVC.Core" \
            /o:"loic-lopez" \
            /n:"UMVC.Core" \
            /v:"${{ steps.gitversion.outputs.semVer }}" \
            /d:sonar.login="${{ secrets.SONAR_TOKEN_CORE }}" \
            /d:sonar.cs.dotcover.reportsPaths=./dotCover.Output.html \
            /d:sonar.scm.provider=git \
            /d:sonar.projectDescription="UMVC.Core - Model-View-Controller Base classes for UMVC" \
            /d:sonar.host.url=https://sonarcloud.io
        working-directory: UMVC.Core

      - name: Build UMVC.Core
        run: dotnet build --no-incremental
        working-directory: UMVC.Core
      
      - name: Test UMVC.Core
        run: dotnet dotcover test --dcReportType=HTML
        working-directory: UMVC.Core

      - name: End SonarCloud scanner for UMVC.Core
        run: |
          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN_CORE }}"
        working-directory: UMVC.Core
      