name: UMVC.Editor & UMVC.Core Release

on:
  push:
    branches:
      - master
  workflow_dispatch: {}

jobs:
  Test_UMVC_Core:
    name: Test UMVC.Core üß™
    runs-on: windows-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:

      - uses: actions/checkout@v2  

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '3.1.x'

      - name: Install dotnet dependencies
        run: dotnet restore ./UMVC.Core/UMVC.Core.sln

      - name: Build
        run: dotnet build ./UMVC.Core/UMVC.Core.sln --configuration Debug

      - name: Test
        run: .\UMVC.Core\packages\OpenCover\4.7.1221\tools\OpenCover.Console.exe -register -filter:"+[*]* -[*]*.Templates.* -[*]*.Mock.*" -target:".\UMVC.Core\packages\NUnit.ConsoleRunner\3.12.0\tools\nunit3-console.exe" -targetargs:"/domain:single .\UMVC.Core\Tests\bin\Debug\net461\UMVC.Core.Tests.dll" -output:coverage.xml

      - name: Codecov
        uses: codecov/codecov-action@master
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          name: codecov-umbrella
          fail_ci_if_error: true

  Build_UMVC_Core:
    name: Build UMVC.Core üèóÔ∏è
    runs-on: windows-latest
    needs: Test_UMVC_Core
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:

      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '3.1.x'

      - name: Install dotnet dependencies
        run: dotnet restore ./UMVC.Core/UMVC.Core.sln

      - name: Build
        run: dotnet build ./UMVC.Core/UMVC.Core.sln --configuration Release

      - uses: actions/upload-artifact@v2
        name: Upload UMVC.Core.Components.dll
        with:
          name: UMVC.Core.Build
          path: UMVC.Core/Components/bin/Release/UMVC.Core.Components.dll

#      - uses: actions/upload-artifact@v2
#        name: Upload UMVC.Core.Exceptions.dll
#        with:
#          name: UMVC.Core.Build
#          path: UMVC.Core/Exceptions/obj/Release/UMVC.Core.Exceptions.dll

      - uses: actions/upload-artifact@v2
        name: Upload UMVC.Core.Generation.dll
        with:
          name: UMVC.Core.Build
          path: UMVC.Core/Generation/obj/Release/UMVC.Core.Generation.dll

      - uses: actions/upload-artifact@v2
        name: Upload UMVC.Core.Templates.dll
        with:
          name: UMVC.Core.Build
          path: UMVC.Core/Templates/bin/Release/UMVC.Core.Templates.dll

      - uses: actions/upload-artifact@v2
        name: Upload UMVC.Core.MVC.dll
        with:
          name: UMVC.Core.Build
          path: UMVC.Core/MVC/bin/Release/UMVC.Core.MVC.dll

  Test_UMVC_Editor:
    name: Test UMVC.Editor üß™
    runs-on: ubuntu-latest
    needs: Build_UMVC_Core
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    steps:
      - uses: actions/checkout@v2

      - name: Download UMVC.Core Build
        uses: actions/download-artifact@v2
        with:
          name: UMVC.Core.Build

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install python3-pip unzip curl -y && pip install requests

      - name: Unzip and move UMVC.Core dlls
        run: sh .github/workflows/scripts/install-umvc.editor-deps-same-workflow.sh

      # Test edit mode
      - name: Run playmode tests
        uses: game-ci/unity-test-runner@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          unityVersion: 2021.2.19f1
          testMode: playmode
          customParameters: |
            -enableCodeCoverage 
            -coverageResultsPath /github/workspace/artifacts/CodeCoverage/ 
            -coverageOptions "assemblyFilters:-*unity*"
            -debugCodeOptimization
      
      # Test play mode
      - name: Run editmode tests
        uses: game-ci/unity-test-runner@v2.0.0
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          unityVersion: 2021.2.19f1
          testMode: editmode
          customParameters: |
            -enableCodeCoverage 
            -coverageResultsPath /github/workspace/artifacts/CodeCoverage/ 
            -coverageOptions "assemblyFilters:-*unity*"
            -debugCodeOptimization

      - name: Codecov
        uses: codecov/codecov-action@v3.0.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./artifacts/CodeCoverage/workspace-opencov/PlayMode/TestCoverageResults_0000.xml,./artifacts/CodeCoverage/workspace-opencov/EditMode/TestCoverageResults_0000.xml
          name: codecov-umbrella
          fail_ci_if_error: true

  Build_UMVC_Editor:
    name: Build UMVC.Editor üèóÔ∏è
    runs-on: ubuntu-latest
    container: unityci/editor:ubuntu-2021.2.19f1-base-1.0.0
    needs: Test_UMVC_Editor
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@v2

      - name: Download UMVC.Core Build
        uses: actions/download-artifact@v2
        with:
          name: UMVC.Core.Build

      - name: Unzip and move UMVC.Core dlls
        run: sh .github/workflows/scripts/install-umvc.editor-deps-same-workflow.sh

      - name: Delete Tests directory
        run: rm -rf Assets/UMVC.Tests

      - name: Create UMVC.Editor.PreBuiltDlls.unitypackage with prebundled UMVC.Core
        run:  /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -executeMethod UMVC.Export.UMVCPackageExport.ExportWithPreBuiltDlls

      - uses: actions/upload-artifact@v2
        name: Upload UMVC.Editor.PreBuiltDlls.unitypackage
        with:
          name: UMVC.Editor.PreBuiltDlls.unitypackage
          path: ./UMVC.Editor.PreBuiltDlls.unitypackage

      - name: Create UMVC.Editor.MsBuildForUnity.unitypackage with unbundled UMVC.Core
        run:  /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -executeMethod UMVC.Export.UMVCPackageExport.ExportWithMsBuildForUnity

      - uses: actions/upload-artifact@v2
        name: Upload UMVC.Editor.MsBuildForUnity.unitypackage
        with:
          name: UMVC.Editor.MsBuildForUnity.unitypackage
          path: ./UMVC.Editor.MsBuildForUnity.unitypackage

  Release_UMVC:
    name: Release UMVC üì¶
    runs-on: ubuntu-latest
    needs: Build_UMVC_Editor
    if: "!contains(github.event.head_commit.message, '[skip ci]') && github.ref == 'refs/heads/master'"
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow --tags

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.11
        with:
          versionSpec: '5.x'
          
      - name: Determine Version
        id:   gitversion
        uses: gittools/actions/gitversion/execute@v0.9.11
      
      - name: üì¶ Zip UMVC.Core Sources
        run: zip -r UMVC.Core.${{ steps.gitversion.outputs.semVer }}.zip UMVC.Core
        
      - name: Download UMVC.Editor.MsBuildForUnity.unitypackage
        uses: actions/download-artifact@v2
        with:
          name: UMVC.Editor.MsBuildForUnity.unitypackage
          
      - name: Download UMVC.Editor.PreBuiltDlls.unitypackage
        uses: actions/download-artifact@v2
        with:
          name: UMVC.Editor.PreBuiltDlls.unitypackage
          
      - name: Change assets names for release ${{ steps.gitversion.outputs.semVer }}
        run: |
          mv UMVC.Editor.MsBuildForUnity.unitypackage UMVC.Editor.MsBuildForUnity.${{ steps.gitversion.outputs.semVer }}.unitypackage
          mv UMVC.Editor.PreBuiltDlls.unitypackage UMVC.Editor.PreBuiltDlls.${{ steps.gitversion.outputs.semVer }}.unitypackage
          
      - name: üöÄ Create GitHub release
        uses: softprops/action-gh-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.UMVC_PUSH_TAG_PAT }}
        with:
          tag_name: v${{ steps.gitversion.outputs.semVer }}
          body: |
            # Changes in release v${{ steps.gitversion.outputs.semVer }}
          files: |
            UMVC.Core.${{ steps.gitversion.outputs.semVer }}.zip
            UMVC.Editor.PreBuiltDlls.${{ steps.gitversion.outputs.semVer }}.unitypackage
            UMVC.Editor.MsBuildForUnity.${{ steps.gitversion.outputs.semVer }}.unitypackage
          draft: false
          prerelease: false
          generate_release_notes: true
